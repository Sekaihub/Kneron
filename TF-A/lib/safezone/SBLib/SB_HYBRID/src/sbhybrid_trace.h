/* sbhybrid_trace.h
 *
 * Description: Secure boot library: Internal logging / tracing
 *              definitions for SB_HYBRID
 */

/* -------------------------------------------------------------------------- */
/*                                                                            */
/*   Module        : SecureBoot                                               */
/*   Version       : 4.5                                                      */
/*   Configuration : SecureBoot                                               */
/*                                                                            */
/*   Date          : 2023-Feb-14                                              */
/*                                                                            */
/* Copyright (c) 2007-2023 by Rambus, Inc. and/or its subsidiaries.           */
/* All rights reserved. Unauthorized use (including, without limitation,      */
/* distribution and copying) is strictly prohibited. All use requires,        */
/* and is subject to, explicit written authorization and nondisclosure        */
/* agreements with Rambus, Inc. and/or its subsidiaries.                      */
/*                                                                            */
/* For more information or support, please go to our online support system at */
/* https://sipsupport.rambus.com.                                             */
/* In case you do not have an account for this system, please send an e-mail  */
/* to sipsupport@rambus.com.                                                  */
/* -------------------------------------------------------------------------- */


#ifndef INCLUDE_GUARD_SBHYBRID_TRACE_INTERNAL_H
#define INCLUDE_GUARD_SBHYBRID_TRACE_INTERNAL_H

#ifdef IMPLDEFS_CF_DISABLE_L_TRACE

#define L_TRACE_DIGEST(_d)
#define L_TRACE_PUBKEY(_k)
#define L_TRACE_SIGNATURE(_s)

#elif SBIF_ECDSA_WORDS == 7

#define L_TRACE_DIGEST(_d) L_TRACE(LF_SBHYBRID, \
            "Digest: " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X", \
            (_d)[0],  (_d)[1],  (_d)[2],  (_d)[3],  (_d)[4],  (_d)[5],  (_d)[6],  \
            (_d)[7],  (_d)[8],  (_d)[9],  (_d)[10], (_d)[11], (_d)[12], (_d)[13], \
            (_d)[14], (_d)[15], (_d)[16], (_d)[17], (_d)[18], (_d)[19], (_d)[20], \
            (_d)[21], (_d)[22], (_d)[23], (_d)[24], (_d)[25], (_d)[26], (_d)[27])
#define L_TRACE_PUBKEY(_k) L_TRACE(LF_SBHYBRID, \
            "PubKey: " \
            "x{%08X %08X %08X %08X %08X %08X %08X}" \
            "y{%08X %08X %08X %08X %08X %08X %08X}", \
            (_k)->Qx[0],  (_k)->Qx[1],  (_k)->Qx[2],  (_k)->Qx[3],  (_k)->Qx[4],  (_k)->Qx[5],  (_k)->Qx[6],  \
            (_k)->Qy[0],  (_k)->Qy[1],  (_k)->Qy[2],  (_k)->Qy[3],  (_k)->Qy[4],  (_k)->Qy[5],  (_k)->Qy[6])

#define L_TRACE_SIGNATURE(_s) L_TRACE(LF_SBHYBRID, \
            "Signature: " \
            "r{" \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X} " \
            "s{" \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X}", \
            (_s)->r[0],  (_s)->r[1],  (_s)->r[2],  (_s)->r[3],  (_s)->r[4],  (_s)->r[5],  (_s)->r[6],  \
            (_s)->r[7],  (_s)->r[8],  (_s)->r[9],  (_s)->r[10], (_s)->r[11], (_s)->r[12], (_s)->r[13], \
            (_s)->r[14], (_s)->r[15], (_s)->r[16], (_s)->r[17], (_s)->r[18], (_s)->r[19], (_s)->r[20], \
            (_s)->r[21], (_s)->r[22], (_s)->r[23], (_s)->r[24], (_s)->r[25], (_s)->r[26], (_s)->r[27], \
            (_s)->s[0],  (_s)->s[1],  (_s)->s[2],  (_s)->s[3],  (_s)->s[4],  (_s)->s[5],  (_s)->s[6],  \
            (_s)->s[7],  (_s)->s[8],  (_s)->s[9],  (_s)->s[10], (_s)->s[11], (_s)->s[12], (_s)->s[13], \
            (_s)->s[14], (_s)->s[15], (_s)->s[16], (_s)->s[17], (_s)->s[18], (_s)->s[19], (_s)->s[20], \
            (_s)->s[21], (_s)->s[22], (_s)->s[23], (_s)->s[24], (_s)->s[25], (_s)->s[26], (_s)->s[27])

#elif SBIF_ECDSA_WORDS == 8

#define L_TRACE_DIGEST(_d) L_TRACE(LF_SBHYBRID, \
            "Digest: " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X ", \
            (_d)[0],  (_d)[1],  (_d)[2],  (_d)[3],  (_d)[4],  (_d)[5],  (_d)[6],  (_d)[7],  \
            (_d)[8],  (_d)[9],  (_d)[10], (_d)[11], (_d)[12], (_d)[13], (_d)[14], (_d)[15], \
            (_d)[16], (_d)[17], (_d)[18], (_d)[19], (_d)[20], (_d)[21], (_d)[22], (_d)[23], \
            (_d)[24], (_d)[25], (_d)[26], (_d)[27], (_d)[28], (_d)[29], (_d)[30], (_d)[31])

#define L_TRACE_PUBKEY(_k) L_TRACE(LF_SBHYBRID, \
            "PubKey: " \
            "Qx{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X} " \
            "Qy{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X}", \
            (_k)->Qx[0],  (_k)->Qx[1],  (_k)->Qx[2],  (_k)->Qx[3],  (_k)->Qx[4],  (_k)->Qx[5],  (_k)->Qx[6],  (_k)->Qx[7],  \
            (_k)->Qx[8],  (_k)->Qx[9],  (_k)->Qx[10], (_k)->Qx[11], (_k)->Qx[12], (_k)->Qx[13], (_k)->Qx[14], (_k)->Qx[15], \
            (_k)->Qx[16], (_k)->Qx[17], (_k)->Qx[18], (_k)->Qx[19], (_k)->Qx[20], (_k)->Qx[21], (_k)->Qx[22], (_k)->Qx[23], \
            (_k)->Qx[24], (_k)->Qx[25], (_k)->Qx[26], (_k)->Qx[27], (_k)->Qx[28], (_k)->Qx[29], (_k)->Qx[30], (_k)->Qx[31], \
            (_k)->Qy[0],  (_k)->Qy[1],  (_k)->Qy[2],  (_k)->Qy[3],  (_k)->Qy[4],  (_k)->Qy[5],  (_k)->Qy[6],  (_k)->Qy[7],  \
            (_k)->Qy[8],  (_k)->Qy[9],  (_k)->Qy[10], (_k)->Qy[11], (_k)->Qy[12], (_k)->Qy[13], (_k)->Qy[14], (_k)->Qy[15], \
            (_k)->Qy[16], (_k)->Qy[17], (_k)->Qy[18], (_k)->Qy[19], (_k)->Qy[20], (_k)->Qy[21], (_k)->Qy[22], (_k)->Qy[23], \
            (_k)->Qy[24], (_k)->Qy[25], (_k)->Qy[26], (_k)->Qy[27], (_k)->Qy[28], (_k)->Qy[29], (_k)->Qy[30], (_k)->Qy[31])

#define L_TRACE_SIGNATURE(_s) L_TRACE(LF_SBHYBRID, \
            "Signature: " \
            "r{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X} " \
            "s{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X}", \
            (_s)->r[0],  (_s)->r[1],  (_s)->r[2],  (_s)->r[3],  (_s)->r[4],  (_s)->r[5],  (_s)->r[6],  (_s)->r[7],  \
            (_s)->r[8],  (_s)->r[9],  (_s)->r[10], (_s)->r[11], (_s)->r[12], (_s)->r[13], (_s)->r[14], (_s)->r[15], \
            (_s)->r[16], (_s)->r[17], (_s)->r[18], (_s)->r[19], (_s)->r[20], (_s)->r[21], (_s)->r[22], (_s)->r[23], \
            (_s)->r[24], (_s)->r[25], (_s)->r[26], (_s)->r[27], (_s)->r[28], (_s)->r[29], (_s)->r[30], (_s)->r[31], \
            (_s)->s[0],  (_s)->s[1],  (_s)->s[2],  (_s)->s[3],  (_s)->s[4],  (_s)->s[5],  (_s)->s[6],  (_s)->s[7],  \
            (_s)->s[8],  (_s)->s[9],  (_s)->s[10], (_s)->s[11], (_s)->s[12], (_s)->s[13], (_s)->s[14], (_s)->s[15], \
            (_s)->s[16], (_s)->s[17], (_s)->s[18], (_s)->s[19], (_s)->s[20], (_s)->s[21], (_s)->s[22], (_s)->s[23], \
            (_s)->s[24], (_s)->s[25], (_s)->s[26], (_s)->s[27], (_s)->s[28], (_s)->s[29], (_s)->s[30], (_s)->s[31])

#elif SBIF_ECDSA_WORDS == 12

#define L_TRACE_DIGEST(_d) L_TRACE(LF_SBHYBRID, \
            "Digest: " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X ", \
            (_d)[0],  (_d)[1],  (_d)[2],  (_d)[3],  (_d)[4],  (_d)[5],  (_d)[6],  (_d)[7],  \
            (_d)[8],  (_d)[9],  (_d)[10], (_d)[11], (_d)[12], (_d)[13], (_d)[14], (_d)[15], \
            (_d)[16], (_d)[17], (_d)[18], (_d)[19], (_d)[20], (_d)[21], (_d)[22], (_d)[23], \
            (_d)[24], (_d)[25], (_d)[26], (_d)[27], (_d)[28], (_d)[29], (_d)[30], (_d)[31], \
            (_d)[32], (_d)[33], (_d)[34], (_d)[35], (_d)[36], (_d)[37], (_d)[38], (_d)[39], \
            (_d)[40], (_d)[40], (_d)[42], (_d)[43], (_d)[44], (_d)[45], (_d)[46], (_d)[47])

#define L_TRACE_PUBKEY(_k) L_TRACE(LF_SBHYBRID, \
            "PubKey: " \
            "Qx{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X} " \
            "Qy{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X}", \
            (_k)->Qx[0],  (_k)->Qx[1],  (_k)->Qx[2],  (_k)->Qx[3],  (_k)->Qx[4],  (_k)->Qx[5],  (_k)->Qx[6],  (_k)->Qx[7],  \
            (_k)->Qx[8],  (_k)->Qx[9],  (_k)->Qx[10], (_k)->Qx[11], (_k)->Qx[12], (_k)->Qx[13], (_k)->Qx[14], (_k)->Qx[15], \
            (_k)->Qx[16], (_k)->Qx[17], (_k)->Qx[18], (_k)->Qx[19], (_k)->Qx[20], (_k)->Qx[21], (_k)->Qx[22], (_k)->Qx[23], \
            (_k)->Qx[24], (_k)->Qx[25], (_k)->Qx[26], (_k)->Qx[27], (_k)->Qx[28], (_k)->Qx[29], (_k)->Qx[30], (_k)->Qx[31], \
            (_k)->Qx[32], (_k)->Qx[33], (_k)->Qx[34], (_k)->Qx[35], (_k)->Qx[36], (_k)->Qx[37], (_k)->Qx[38], (_k)->Qx[39], \
            (_k)->Qx[40], (_k)->Qx[41], (_k)->Qx[42], (_k)->Qx[43], (_k)->Qx[44], (_k)->Qx[45], (_k)->Qx[46], (_k)->Qx[47], \
            (_k)->Qy[0],  (_k)->Qy[1],  (_k)->Qy[2],  (_k)->Qy[3],  (_k)->Qy[4],  (_k)->Qy[5],  (_k)->Qy[6],  (_k)->Qy[7],  \
            (_k)->Qy[8],  (_k)->Qy[9],  (_k)->Qy[10], (_k)->Qy[11], (_k)->Qy[12], (_k)->Qy[13], (_k)->Qy[14], (_k)->Qy[15], \
            (_k)->Qy[16], (_k)->Qy[17], (_k)->Qy[18], (_k)->Qy[19], (_k)->Qy[20], (_k)->Qy[21], (_k)->Qy[22], (_k)->Qy[23], \
            (_k)->Qy[24], (_k)->Qy[25], (_k)->Qy[26], (_k)->Qy[27], (_k)->Qy[28], (_k)->Qy[29], (_k)->Qy[30], (_k)->Qy[31], \
            (_k)->Qy[32], (_k)->Qy[33], (_k)->Qy[34], (_k)->Qy[35], (_k)->Qy[36], (_k)->Qy[37], (_k)->Qy[38], (_k)->Qy[39], \
            (_k)->Qy[40], (_k)->Qy[41], (_k)->Qy[42], (_k)->Qy[43], (_k)->Qy[44], (_k)->Qy[45], (_k)->Qy[46], (_k)->Qy[47])

#define L_TRACE_SIGNATURE(_s) L_TRACE(LF_SBHYBRID, \
            "Signature: " \
            "r{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X} " \
            "s{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X}", \
            (_s)->r[0],  (_s)->r[1],  (_s)->r[2],  (_s)->r[3],  (_s)->r[4],  (_s)->r[5],  (_s)->r[6],  (_s)->r[7],  \
            (_s)->r[8],  (_s)->r[9],  (_s)->r[10], (_s)->r[11], (_s)->r[12], (_s)->r[13], (_s)->r[14], (_s)->r[15], \
            (_s)->r[16], (_s)->r[17], (_s)->r[18], (_s)->r[19], (_s)->r[20], (_s)->r[21], (_s)->r[22], (_s)->r[23], \
            (_s)->r[24], (_s)->r[25], (_s)->r[26], (_s)->r[27], (_s)->r[28], (_s)->r[29], (_s)->r[30], (_s)->r[31], \
            (_s)->r[32], (_s)->r[33], (_s)->r[34], (_s)->r[35], (_s)->r[36], (_s)->r[37], (_s)->r[38], (_s)->r[39], \
            (_s)->r[40], (_s)->r[41], (_s)->r[42], (_s)->r[43], (_s)->r[44], (_s)->r[45], (_s)->r[46], (_s)->r[47], \
            (_s)->s[0],  (_s)->s[1],  (_s)->s[2],  (_s)->s[3],  (_s)->s[4],  (_s)->s[5],  (_s)->s[6],  (_s)->s[7],  \
            (_s)->s[8],  (_s)->s[9],  (_s)->s[10], (_s)->s[11], (_s)->s[12], (_s)->s[13], (_s)->s[14], (_s)->s[15], \
            (_s)->s[16], (_s)->s[17], (_s)->s[18], (_s)->s[19], (_s)->s[20], (_s)->s[21], (_s)->s[22], (_s)->s[23], \
            (_s)->s[24], (_s)->s[25], (_s)->s[26], (_s)->s[27], (_s)->s[28], (_s)->s[29], (_s)->s[30], (_s)->s[31], \
            (_s)->s[32], (_s)->s[33], (_s)->s[34], (_s)->s[35], (_s)->s[36], (_s)->s[37], (_s)->s[38], (_s)->s[39], \
            (_s)->s[40], (_s)->s[41], (_s)->s[42], (_s)->s[43], (_s)->s[44], (_s)->s[45], (_s)->s[46], (_s)->s[47])

#elif SBIF_ECDSA_WORDS == 17

#define L_TRACE_DIGEST(_d) L_TRACE(LF_SBHYBRID, \
            "Digest: " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X ", \
            (_d)[0],  (_d)[1],  (_d)[2],  (_d)[3],  (_d)[4],  (_d)[5],  (_d)[6],  (_d)[7],  \
            (_d)[8],  (_d)[9],  (_d)[10], (_d)[11], (_d)[12], (_d)[13], (_d)[14], (_d)[15], \
            (_d)[16], (_d)[17], (_d)[18], (_d)[19], (_d)[20], (_d)[21], (_d)[22], (_d)[23], \
            (_d)[24], (_d)[25], (_d)[26], (_d)[27], (_d)[28], (_d)[29], (_d)[30], (_d)[31], \
            (_d)[32], (_d)[33], (_d)[34], (_d)[35], (_d)[36], (_d)[37], (_d)[38], (_d)[39], \
            (_d)[40], (_d)[40], (_d)[42], (_d)[43], (_d)[44], (_d)[45], (_d)[46], (_d)[47], \
            (_d)[48], (_d)[49], (_d)[50], (_d)[51], (_d)[52], (_d)[53], (_d)[54], (_d)[55], \
            (_d)[56], (_d)[57], (_d)[58], (_d)[59], (_d)[60], (_d)[61], (_d)[62], (_d)[63])

#define L_TRACE_PUBKEY(_k) L_TRACE(LF_SBHYBRID, \
            "PubKey: " \
            "Qx{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X} " \
            "Qy{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X}", \
            (_k)->Qx[0],  (_k)->Qx[1],  (_k)->Qx[2],  (_k)->Qx[3],  (_k)->Qx[4],  (_k)->Qx[5],  (_k)->Qx[6],  (_k)->Qx[7],  \
            (_k)->Qx[8],  (_k)->Qx[9],  (_k)->Qx[10], (_k)->Qx[11], (_k)->Qx[12], (_k)->Qx[13], (_k)->Qx[14], (_k)->Qx[15], \
            (_k)->Qx[16], (_k)->Qx[17], (_k)->Qx[18], (_k)->Qx[19], (_k)->Qx[20], (_k)->Qx[21], (_k)->Qx[22], (_k)->Qx[23], \
            (_k)->Qx[24], (_k)->Qx[25], (_k)->Qx[26], (_k)->Qx[27], (_k)->Qx[28], (_k)->Qx[29], (_k)->Qx[30], (_k)->Qx[31], \
            (_k)->Qx[32], (_k)->Qx[33], (_k)->Qx[34], (_k)->Qx[35], (_k)->Qx[36], (_k)->Qx[37], (_k)->Qx[38], (_k)->Qx[39], \
            (_k)->Qx[40], (_k)->Qx[41], (_k)->Qx[42], (_k)->Qx[43], (_k)->Qx[44], (_k)->Qx[45], (_k)->Qx[46], (_k)->Qx[47], \
            (_k)->Qx[48], (_k)->Qx[49], (_k)->Qx[50], (_k)->Qx[51], (_k)->Qx[52], (_k)->Qx[53], (_k)->Qx[54], (_k)->Qx[55], \
            (_k)->Qx[56], (_k)->Qx[57], (_k)->Qx[58], (_k)->Qx[59], (_k)->Qx[60], (_k)->Qx[61], (_k)->Qx[62], (_k)->Qx[63], \
            (_k)->Qx[64], (_k)->Qx[65],  \
            (_k)->Qy[0],  (_k)->Qy[1],  (_k)->Qy[2],  (_k)->Qy[3],  (_k)->Qy[4],  (_k)->Qy[5],  (_k)->Qy[6],  (_k)->Qy[7],  \
            (_k)->Qy[8],  (_k)->Qy[9],  (_k)->Qy[10], (_k)->Qy[11], (_k)->Qy[12], (_k)->Qy[13], (_k)->Qy[14], (_k)->Qy[15], \
            (_k)->Qy[16], (_k)->Qy[17], (_k)->Qy[18], (_k)->Qy[19], (_k)->Qy[20], (_k)->Qy[21], (_k)->Qy[22], (_k)->Qy[23], \
            (_k)->Qy[24], (_k)->Qy[25], (_k)->Qy[26], (_k)->Qy[27], (_k)->Qy[28], (_k)->Qy[29], (_k)->Qy[30], (_k)->Qy[31], \
            (_k)->Qy[32], (_k)->Qy[33], (_k)->Qy[34], (_k)->Qy[35], (_k)->Qy[36], (_k)->Qy[37], (_k)->Qy[38], (_k)->Qy[39], \
            (_k)->Qy[40], (_k)->Qy[41], (_k)->Qy[42], (_k)->Qy[43], (_k)->Qy[44], (_k)->Qy[45], (_k)->Qy[46], (_k)->Qy[47], \
            (_k)->Qy[48], (_k)->Qy[49], (_k)->Qy[50], (_k)->Qy[51], (_k)->Qy[52], (_k)->Qy[53], (_k)->Qy[54], (_k)->Qy[55], \
            (_k)->Qy[56], (_k)->Qy[57], (_k)->Qy[58], (_k)->Qy[59], (_k)->Qy[60], (_k)->Qy[61], (_k)->Qy[62], (_k)->Qy[63], \
            (_k)->Qy[64], (_k)->Qy[65])

#define L_TRACE_SIGNATURE(_s) L_TRACE(LF_SBHYBRID, \
            "Signature: " \
            "r{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X} " \
            "s{" \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X}", \
            (_s)->r[0],  (_s)->r[1],  (_s)->r[2],  (_s)->r[3],  (_s)->r[4],  (_s)->r[5],  (_s)->r[6],  (_s)->r[7],  \
            (_s)->r[8],  (_s)->r[9],  (_s)->r[10], (_s)->r[11], (_s)->r[12], (_s)->r[13], (_s)->r[14], (_s)->r[15], \
            (_s)->r[16], (_s)->r[17], (_s)->r[18], (_s)->r[19], (_s)->r[20], (_s)->r[21], (_s)->r[22], (_s)->r[23], \
            (_s)->r[24], (_s)->r[25], (_s)->r[26], (_s)->r[27], (_s)->r[28], (_s)->r[29], (_s)->r[30], (_s)->r[31], \
            (_s)->r[32], (_s)->r[33], (_s)->r[34], (_s)->r[35], (_s)->r[36], (_s)->r[37], (_s)->r[38], (_s)->r[39], \
            (_s)->r[40], (_s)->r[41], (_s)->r[42], (_s)->r[43], (_s)->r[44], (_s)->r[45], (_s)->r[46], (_s)->r[47], \
            (_s)->r[48], (_s)->r[49], (_s)->r[50], (_s)->r[51], (_s)->r[52], (_s)->r[53], (_s)->r[54], (_s)->r[55], \
            (_s)->r[56], (_s)->r[57], (_s)->r[58], (_s)->r[59], (_s)->r[60], (_s)->r[61], (_s)->r[62], (_s)->r[63], \
            (_s)->r[64], (_s)->r[65], \
            (_s)->s[0],  (_s)->s[1],  (_s)->s[2],  (_s)->s[3],  (_s)->s[4],  (_s)->s[5],  (_s)->s[6],  (_s)->s[7],  \
            (_s)->s[8],  (_s)->s[9],  (_s)->s[10], (_s)->s[11], (_s)->s[12], (_s)->s[13], (_s)->s[14], (_s)->s[15], \
            (_s)->s[16], (_s)->s[17], (_s)->s[18], (_s)->s[19], (_s)->s[20], (_s)->s[21], (_s)->s[22], (_s)->s[23], \
            (_s)->s[24], (_s)->s[25], (_s)->s[26], (_s)->s[27], (_s)->s[28], (_s)->s[29], (_s)->s[30], (_s)->s[31], \
            (_s)->s[32], (_s)->s[33], (_s)->s[34], (_s)->s[35], (_s)->s[36], (_s)->s[37], (_s)->s[38], (_s)->s[39], \
            (_s)->s[40], (_s)->s[41], (_s)->s[42], (_s)->s[43], (_s)->s[44], (_s)->s[45], (_s)->s[46], (_s)->s[47], \
            (_s)->s[48], (_s)->s[49], (_s)->s[50], (_s)->s[51], (_s)->s[52], (_s)->s[53], (_s)->s[54], (_s)->s[55], \
            (_s)->s[56], (_s)->s[57], (_s)->s[58], (_s)->s[59], (_s)->s[60], (_s)->s[61], (_s)->s[62], (_s)->s[63], \
            (_s)->s[64], (_s)->s[65])

#else

#define L_TRACE_DIGEST(_d) L_TRACE(LF_SBHYBRID, \
            "Digest: " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X " \
            "%02X %02X %02X %02X %02X %02X %02X %02X ", \
            (_d)[0],  (_d)[1],  (_d)[2],  (_d)[3],  (_d)[4],  (_d)[5],  (_d)[6],  (_d)[7],  \
            (_d)[8],  (_d)[9],  (_d)[10], (_d)[11], (_d)[12], (_d)[13], (_d)[14], (_d)[15], \
            (_d)[16], (_d)[17], (_d)[18], (_d)[19], (_d)[20], (_d)[21], (_d)[22], (_d)[23], \
            (_d)[24], (_d)[25], (_d)[26], (_d)[27], (_d)[28], (_d)[29], (_d)[30], (_d)[31])

/* Disable Public key and Signature trace for now */
#define L_TRACE_PUBKEY(_k)
#define L_TRACE_SIGNATURE(_s)

#endif

#endif

/* end of file sbhybrid_trace.h */